const e=JSON.parse('{"key":"v-61a44a70","path":"/category/Vue/2.html","title":"30 道 Vue 面试题","lang":"zh-CN","frontmatter":{"title":"30 道 Vue 面试题","lang":"zh-CN","date":"2022-03-15T14:55:00.000Z","author":"XXXWeii","category":["Vue"],"tag":["Vue"],"description":"1、说说你对 SPA 单页面的理解，它的优缺点分别是什么？ SPA（single-page application）仅在 Web 页面初始化时加载相应的 HTML、CSS、JavaScript。一旦页面加载完成，SPA 不会因为用户的操作二进行页面的重新加载或跳转；取而代之的是利用路由机制实现 HTML 内容的变换，UI 与用户交互，避免页面的重新加载。 优点： 用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染。 基于上面一点，SPA 相当于服务器压力小。 前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/XXXWeiiBlog/category/Vue/2.html"}],["meta",{"property":"og:site_name","content":"XXXWeii"}],["meta",{"property":"og:title","content":"30 道 Vue 面试题"}],["meta",{"property":"og:description","content":"1、说说你对 SPA 单页面的理解，它的优缺点分别是什么？ SPA（single-page application）仅在 Web 页面初始化时加载相应的 HTML、CSS、JavaScript。一旦页面加载完成，SPA 不会因为用户的操作二进行页面的重新加载或跳转；取而代之的是利用路由机制实现 HTML 内容的变换，UI 与用户交互，避免页面的重新加载。 优点： 用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染。 基于上面一点，SPA 相当于服务器压力小。 前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/XXXWeiiBlog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-02T10:35:38.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"30 道 Vue 面试题"}],["meta",{"property":"article:author","content":"XXXWeii"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:published_time","content":"2022-03-15T14:55:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-02T10:35:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"30 道 Vue 面试题\\",\\"image\\":[\\"https://mister-hope.github.io/XXXWeiiBlog/\\"],\\"datePublished\\":\\"2022-03-15T14:55:00.000Z\\",\\"dateModified\\":\\"2023-06-02T10:35:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XXXWeii\\"}]}"]]},"headers":[{"level":2,"title":"1、说说你对 SPA 单页面的理解，它的优缺点分别是什么？","slug":"_1、说说你对-spa-单页面的理解-它的优缺点分别是什么","link":"#_1、说说你对-spa-单页面的理解-它的优缺点分别是什么","children":[]},{"level":2,"title":"2、v-show 与 v-if 有什么区别？","slug":"_2、v-show-与-v-if-有什么区别","link":"#_2、v-show-与-v-if-有什么区别","children":[]},{"level":2,"title":"3、Class 与 Style 如何动态绑定？","slug":"_3、class-与-style-如何动态绑定","link":"#_3、class-与-style-如何动态绑定","children":[]},{"level":2,"title":"4、怎样理解 Vue 的单向数据流？","slug":"_4、怎样理解-vue-的单向数据流","link":"#_4、怎样理解-vue-的单向数据流","children":[]},{"level":2,"title":"5、computed 和 watch 的区别和运用的场景？","slug":"_5、computed-和-watch-的区别和运用的场景","link":"#_5、computed-和-watch-的区别和运用的场景","children":[]},{"level":2,"title":"6、直接给一个数组赋值，Vue 能监测到变化吗？","slug":"_6、直接给一个数组赋值-vue-能监测到变化吗","link":"#_6、直接给一个数组赋值-vue-能监测到变化吗","children":[]},{"level":2,"title":"7、谈谈你对 Vue 生命周期的理解？","slug":"_7、谈谈你对-vue-生命周期的理解","link":"#_7、谈谈你对-vue-生命周期的理解","children":[{"level":3,"title":"(1)生命周期是什么？","slug":"_1-生命周期是什么","link":"#_1-生命周期是什么","children":[]},{"level":3,"title":"(2)各个生命周期的作用？","slug":"_2-各个生命周期的作用","link":"#_2-各个生命周期的作用","children":[]},{"level":3,"title":"(3)生命周期示意图","slug":"_3-生命周期示意图","link":"#_3-生命周期示意图","children":[]}]},{"level":2,"title":"8、Vue 的父组件和子组件生命周期钩子函数执行顺序？","slug":"_8、vue-的父组件和子组件生命周期钩子函数执行顺序","link":"#_8、vue-的父组件和子组件生命周期钩子函数执行顺序","children":[]},{"level":2,"title":"9、在哪个生命周期内调用异步请求？","slug":"_9、在哪个生命周期内调用异步请求","link":"#_9、在哪个生命周期内调用异步请求","children":[]},{"level":2,"title":"10、在什么阶段才能访问操作 DOM？","slug":"_10、在什么阶段才能访问操作-dom","link":"#_10、在什么阶段才能访问操作-dom","children":[]},{"level":2,"title":"11、父组件可以监听到子组件的生命周期吗？","slug":"_11、父组件可以监听到子组件的生命周期吗","link":"#_11、父组件可以监听到子组件的生命周期吗","children":[]},{"level":2,"title":"12、谈谈你对 keep-alive 的了解？","slug":"_12、谈谈你对-keep-alive-的了解","link":"#_12、谈谈你对-keep-alive-的了解","children":[]},{"level":2,"title":"13、组件中 data 为什么是一个函数？","slug":"_13、组件中-data-为什么是一个函数","link":"#_13、组件中-data-为什么是一个函数","children":[]},{"level":2,"title":"14、v-model 的原理？","slug":"_14、v-model-的原理","link":"#_14、v-model-的原理","children":[]},{"level":2,"title":"15、Vue 组件间通信有哪几种方式？","slug":"_15、vue-组件间通信有哪几种方式","link":"#_15、vue-组件间通信有哪几种方式","children":[{"level":3,"title":"（1）props / $emit 适用 父子组件通信","slug":"_1-props-emit-适用-父子组件通信","link":"#_1-props-emit-适用-父子组件通信","children":[]},{"level":3,"title":"（2）ref 与 $parent / $children 适用 父子组件通信","slug":"_2-ref-与-parent-children-适用-父子组件通信","link":"#_2-ref-与-parent-children-适用-父子组件通信","children":[]},{"level":3,"title":"（3）EventBus （$emit / $on） 适用于 父子、隔代、兄弟组件通信","slug":"_3-eventbus-emit-on-适用于-父子、隔代、兄弟组件通信","link":"#_3-eventbus-emit-on-适用于-父子、隔代、兄弟组件通信","children":[]},{"level":3,"title":"（4）$attrs/$listeners 适用于 隔代组件通信","slug":"_4-attrs-listeners-适用于-隔代组件通信","link":"#_4-attrs-listeners-适用于-隔代组件通信","children":[]},{"level":3,"title":"（5）provide / inject 适用于 隔代组件通信","slug":"_5-provide-inject-适用于-隔代组件通信","link":"#_5-provide-inject-适用于-隔代组件通信","children":[]},{"level":3,"title":"（6）Vuex 适用于 父子、隔代、兄弟组件通信","slug":"_6-vuex-适用于-父子、隔代、兄弟组件通信","link":"#_6-vuex-适用于-父子、隔代、兄弟组件通信","children":[]}]},{"level":2,"title":"16、你使用过 Vuex 吗？","slug":"_16、你使用过-vuex-吗","link":"#_16、你使用过-vuex-吗","children":[]},{"level":2,"title":"17、使用过 Vue SSR 吗？说说 SSR？","slug":"_17、使用过-vue-ssr-吗-说说-ssr","link":"#_17、使用过-vue-ssr-吗-说说-ssr","children":[]},{"level":2,"title":"18、vue-router 路由模式有几种？","slug":"_18、vue-router-路由模式有几种","link":"#_18、vue-router-路由模式有几种","children":[]},{"level":2,"title":"19、能说下 vue-router 中常用的 hash 和 history 路由模式实现原理吗？","slug":"_19、能说下-vue-router-中常用的-hash-和-history-路由模式实现原理吗","link":"#_19、能说下-vue-router-中常用的-hash-和-history-路由模式实现原理吗","children":[{"level":3,"title":"（1）hash 模式的实现原理","slug":"_1-hash-模式的实现原理","link":"#_1-hash-模式的实现原理","children":[]},{"level":3,"title":"（2）history 模式的实现原理","slug":"_2-history-模式的实现原理","link":"#_2-history-模式的实现原理","children":[]}]},{"level":2,"title":"20、什么是 MVVM？","slug":"_20、什么是-mvvm","link":"#_20、什么是-mvvm","children":[{"level":3,"title":"（1）View 层","slug":"_1-view-层","link":"#_1-view-层","children":[]},{"level":3,"title":"（2）Model 层","slug":"_2-model-层","link":"#_2-model-层","children":[]},{"level":3,"title":"（3）ViewModel 层","slug":"_3-viewmodel-层","link":"#_3-viewmodel-层","children":[]}]},{"level":2,"title":"21、Vue 是如何实现数据双向绑定的？","slug":"_21、vue-是如何实现数据双向绑定的","link":"#_21、vue-是如何实现数据双向绑定的","children":[{"level":3,"title":"22、Vue 框架怎么实现对象和数组的监听？","slug":"_22、vue-框架怎么实现对象和数组的监听","link":"#_22、vue-框架怎么实现对象和数组的监听","children":[]},{"level":3,"title":"23、Proxy 与 Object.defineProperty 优劣对比","slug":"_23、proxy-与-object-defineproperty-优劣对比","link":"#_23、proxy-与-object-defineproperty-优劣对比","children":[]}]},{"level":2,"title":"24、Vue 怎么用 vm.$set() 解决对象新增属性不能响应的问题 ？","slug":"_24、vue-怎么用-vm-set-解决对象新增属性不能响应的问题","link":"#_24、vue-怎么用-vm-set-解决对象新增属性不能响应的问题","children":[]},{"level":2,"title":"25、虚拟 DOM 的优缺点？","slug":"_25、虚拟-dom-的优缺点","link":"#_25、虚拟-dom-的优缺点","children":[]},{"level":2,"title":"26、虚拟 DOM 实现原理？","slug":"_26、虚拟-dom-实现原理","link":"#_26、虚拟-dom-实现原理","children":[]},{"level":2,"title":"27、Vue 中的 key 有什么作用？","slug":"_27、vue-中的-key-有什么作用","link":"#_27、vue-中的-key-有什么作用","children":[]},{"level":2,"title":"28、你有对 Vue 项目进行哪些优化？","slug":"_28、你有对-vue-项目进行哪些优化","link":"#_28、你有对-vue-项目进行哪些优化","children":[{"level":3,"title":"（1）代码层面的优化","slug":"_1-代码层面的优化","link":"#_1-代码层面的优化","children":[]},{"level":3,"title":"（2）Webpack 层面的优化","slug":"_2-webpack-层面的优化","link":"#_2-webpack-层面的优化","children":[]},{"level":3,"title":"（3）基础的 Web 技术的优化","slug":"_3-基础的-web-技术的优化","link":"#_3-基础的-web-技术的优化","children":[]}]},{"level":2,"title":"29、对于即将到来的 vue3.0 特性你有什么了解的吗？","slug":"_29、对于即将到来的-vue3-0-特性你有什么了解的吗","link":"#_29、对于即将到来的-vue3-0-特性你有什么了解的吗","children":[{"level":3,"title":"（1）监测机制的改变","slug":"_1-监测机制的改变","link":"#_1-监测机制的改变","children":[]},{"level":3,"title":"（2）模板","slug":"_2-模板","link":"#_2-模板","children":[]},{"level":3,"title":"（3）对象式的组件声明方式","slug":"_3-对象式的组件声明方式","link":"#_3-对象式的组件声明方式","children":[]},{"level":3,"title":"（4）其它方面的更改","slug":"_4-其它方面的更改","link":"#_4-其它方面的更改","children":[]}]},{"level":2,"title":"30、手写 Promise.all 和 Promise.race","slug":"_30、手写-promise-all-和-promise-race","link":"#_30、手写-promise-all-和-promise-race","children":[{"level":3,"title":"Promise.all()","slug":"promise-all","link":"#promise-all","children":[]},{"level":3,"title":"Promise.race()","slug":"promise-race","link":"#promise-race","children":[]}]}],"git":{"createdTime":1685702138000,"updatedTime":1685702138000,"contributors":[{"name":"zjw977020546","email":"11487928+zjw977020546@user.noreply.gitee.com","commits":1}]},"readingTime":{"minutes":31.41,"words":9423},"filePathRelative":"category/Vue/2.md","localizedDate":"2022年3月15日","excerpt":"<h2> 1、说说你对 SPA 单页面的理解，它的优缺点分别是什么？</h2>\\n<hr>\\n<p>SPA（single-page application）仅在 Web 页面初始化时加载相应的 HTML、CSS、JavaScript。一旦页面加载完成，SPA 不会因为用户的操作二进行页面的重新加载或跳转；取而代之的是利用路由机制实现 HTML 内容的变换，UI 与用户交互，避免页面的重新加载。</p>\\n<p>优点：</p>\\n<ul>\\n<li>用户体验好、快，内容的改变不需要重新加载整个页面，避免了不必要的跳转和重复渲染。</li>\\n<li>基于上面一点，SPA 相当于服务器压力小。</li>\\n<li>前后端职责分离，架构清晰，前端进行交互逻辑，后端负责数据处理。</li>\\n</ul>","autoDesc":true}');export{e as data};
